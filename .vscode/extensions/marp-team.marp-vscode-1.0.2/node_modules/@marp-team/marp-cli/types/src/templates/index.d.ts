import { Options, RenderResult } from '@marp-team/marpit';
declare type RendererResult = RenderResult & TemplateMeta & {
    length: number;
    size: RenderedSize;
};
interface TemplateCoreOption {
    base?: string;
    lang: string;
    notifyWS?: string;
    renderer: (tplOpts: Options) => RendererResult;
}
export interface TemplateMeta {
    description: string | undefined;
    image: string | undefined;
    title: string | undefined;
    url: string | undefined;
}
interface RenderedSize {
    height: number;
    width: number;
}
export declare type TemplateOption = TemplateBareOption | TemplateBespokeOption;
interface TemplateBareOption {
}
interface TemplateBespokeOption {
    osc?: boolean;
    progress?: boolean;
}
export interface TemplateResult {
    rendered: RendererResult;
    result: string;
}
export declare type Template<T = TemplateOption> = ((locals: TemplateCoreOption & T) => Promise<TemplateResult>) & {
    printable?: boolean;
};
export declare const bare: Template<TemplateBareOption>;
export declare const bespoke: Template<TemplateBespokeOption>;
declare const _default: {
    bare: Template<TemplateBareOption>;
    bespoke: Template<TemplateBespokeOption>;
};
export default _default;
