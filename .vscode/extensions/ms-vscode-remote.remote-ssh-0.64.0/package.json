{
	"name": "remote-ssh",
	"displayName": "Remote - SSH",
	"description": "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
	"version": "0.64.0",
	"preview": true,
	"publisher": "ms-vscode-remote",
	"icon": "resources/remote-ssh.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-remote-release.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-remote-release/issues"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"engines": {
		"vscode": "^1.52.0"
	},
	"extensionKind": [
		"ui"
	],
	"extensionPack": [
		"ms-vscode-remote.remote-ssh-edit"
	],
	"categories": [
		"Other"
	],
	"keywords": [
		"remote development",
		"remote",
		"ssh"
	],
	"activationEvents": [
		"onCommand:opensshremotes.openEmptyWindow",
		"onCommand:opensshremotes.openEmptyWindowInCurrentWindow",
		"onCommand:opensshremotes.openConfigFile",
		"onCommand:opensshremotes.cleanDevBox",
		"onCommand:opensshremotes.cleanRemoteServer",
		"onCommand:opensshremotes.cleanLocalServer",
		"onCommand:opensshremotes.getHelp",
		"onCommand:opensshremotes.getStarted",
		"onCommand:opensshremotes.reportIssue",
		"onCommand:opensshremotes.settings",
		"onCommand:opensshremotes.provideFeedback",
		"onCommand:opensshremotes.showLog",
		"onCommand:opensshremotes.addNewSshHost",
		"onResolveRemoteAuthority:ssh-remote",
		"onView:sshHosts"
	],
	"main": "./out/extension",
	"enableProposedApi": true,
	"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
	"contributes": {
		"configuration": {
			"title": "Remote - SSH",
			"properties": {
				"remote.SSH.configFile": {
					"type": "string",
					"description": "The absolute file path to a custom SSH config file.",
					"default": "",
					"scope": "application"
				},
				"remote.SSH.showLoginTerminal": {
					"type": "boolean",
					"description": "Always reveal the SSH login terminal.",
					"default": false
				},
				"remote.SSH.defaultForwardedPorts": {
					"type": "array",
					"items": {
						"type": "object",
						"required": [
							"remotePort"
						],
						"properties": {
							"name": {
								"type": "string"
							},
							"remotePort": {
								"type": "number"
							},
							"localPort": {
								"type": "number"
							}
						}
					},
					"description": "A list of ports to forward when the connection is established.",
					"default": []
				},
				"remote.SSH.defaultExtensions": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "List of extensions that should be installed automatically on all SSH hosts."
				},
				"remote.SSH.path": {
					"type": "string",
					"description": "An absolute path to the SSH executable. When empty, it will use \"ssh\" on the path or in common install locations.",
					"default": "",
					"scope": "application"
				},
				"remote.SSH.lockfilesInTmp": {
					"type": "boolean",
					"markdownDescription": "Whether to keep lockfiles in `/tmp` instead of in the server's install folder. Useful for connecting to hosts which have issues with locking, such as hosts with a home directory using NFS or another distributed filesystem.",
					"default": false
				},
				"remote.SSH.useFlock": {
					"type": "boolean",
					"markdownDescription": "Whether to use `flock` for creating lockfiles on Linux remotes instead of `ln`. By default, we use `flock` on Linux remotes and `ln` on macOS.",
					"default": true
				},
				"remote.SSH.enableDynamicForwarding": {
					"type": "boolean",
					"description": "Whether to use SSH dynamic forwarding to allow setting up new port tunnels over an existing SSH connection. When this is used, a password only needs to be entered once for each remote window.",
					"default": true
				},
				"remote.SSH.enableAgentForwarding": {
					"type": "boolean",
					"markdownDescription": "Enable SSH agent forwarding via the SSH config option `ForwardAgent`.",
					"default": true
				},
				"remote.SSH.allowLocalServerDownload": {
					"type": "boolean",
					"description": "If downloading the VS Code server fails on the host, this allows the extension to fall back to downloading on the client and transferring it to the host with scp.",
					"markdownDeprecationMessage": "Deprecated, please use `#remote.SSH.localServerDownload#`",
					"default": true
				},
				"remote.SSH.localServerDownload": {
					"type": "string",
					"description": "Whether the extension can download the VS Code Server on the client and transfer it to the host with scp, instead of downloading it on the host.",
					"enum": [
						"auto",
						"always",
						"off"
					],
					"enumDescriptions": [
						"The server will first be downloaded on the host, and if that fails, will fall back to downloading locally",
						"The server will only be downloaded locally and transferred to the host",
						"The server will only be downloaded on the host"
					],
					"default": false
				},
				"remote.SSH.enableAzureIntegration": {
					"type": "boolean",
					"markdownDescription": "**Experimental**: Detect SSH connections that target Azure VMs in the SSH hosts explorer. Requires that you are logged in using the `Azure Account` extension.",
					"default": false
				},
				"remote.SSH.windowsRemotes": {
					"type": "array",
					"markdownDescription": "**Deprecated**: Enables experimental support for connecting to Windows remotes. Add the names of windows remotes to this list.",
					"deprecationMessage": "Deprecated: Please use `remote.SSH.remotePlatorm` instead",
					"default": [],
					"items": {
						"type": "string"
					}
				},
				"remote.SSH.useLocalServer": {
					"type": "boolean",
					"markdownDescription": "Enables a mode for connecting using a single connection shared between windows and across window reloads. This makes it faster to open new windows and reduces the number of times a password needs to be entered.",
					"default": true
				},
				"remote.SSH.connectTimeout": {
					"type": "number",
					"description": "Specifies the timeout in seconds used for the SSH command that connects to the remote.",
					"default": 15,
					"minimum": 1
				},
				"remote.SSH.logLevel": {
					"type": "string",
					"description": "The log level for the extension.",
					"default": "debug",
					"scope": "application",
					"enum": [
						"debug",
						"trace"
					]
				},
				"remote.SSH.maxReconnectionAttempts": {
					"type": [
						"number",
						"null"
					],
					"markdownDescription": "The maximum number of times to attempt reconnection. Use 0 to disallow reconnection, and `null` to use the maximum of 8.",
					"default": null,
					"scope": "application",
					"maximum": 8,
					"minimum": 0
				},
				"remote.SSH.suppressWindowsSshWarning": {
					"type": "boolean",
					"description": "Due to a bug with password handling in some versions of the SSH client bundled with Windows, the extension prefers a non-Windows SSH client, such as the one bundled with Git, and will show a warning when another one can't be found. This setting disables that warning.",
					"default": false,
					"scope": "application"
				},
				"remote.SSH.remotePlatform": {
					"type": "object",
					"markdownDescription": "A map of the remote hostname to the platform for that remote. Valid values: `linux`, `macOS`, `windows`. Note - this setting will soon be required when useLocalServer is disabled, so it is currently being autopopulated for successful connections, but is not currently used.",
					"scope": "application",
					"patternProperties": {
						".*": {
							"type": "string",
							"enum": [
								"macOS",
								"windows",
								"linux"
							]
						}
					}
				},
				"remote.SSH.remoteServerListenOnSocket": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When true, the remote VS Code server will listen on a socket path instead of opening a port. Only valid for Linux and macOS remotes. After toggling this setting, run the command \"Kill VS Code Server on Host...\" for it to take effect. Requires OpenSSH 6.7+. Disables the \"local server\" connection multiplexing mode. Requires `AllowStreamLocalForwarding` to be enabled for the SSH server."
				}
			}
		},
		"views": {
			"remote": [
				{
					"id": "sshHosts",
					"name": "SSH Targets",
					"group": "targets@1",
					"remoteName": "ssh-remote"
				}
			]
		},
		"commands": [
			{
				"command": "opensshremotes.openWebUI",
				"title": "Open Web UI",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.openEmptyWindow",
				"title": "Connect to Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.openEmptyWindowOnCurrentHost",
				"title": "New Window on Active Host",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.openEmptyWindowInCurrentWindow",
				"title": "Connect Current Window to Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.openConfigFile",
				"title": "Open Configuration File...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.addNewSshHost",
				"title": "Add New SSH Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.cleanDevBox",
				"title": "Uninstall VS Code Server from Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.cleanRemoteServer",
				"title": "Kill VS Code Server on Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.cleanLocalServer",
				"title": "Kill Local Connection Server For Host...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.getHelp",
				"title": "Help",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.getStarted",
				"title": "Getting Started",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.reportIssue",
				"title": "Report Issue...",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.settings",
				"title": "Settings",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.provideFeedback",
				"title": "Provide Feedback",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotes.showLog",
				"title": "Show Log",
				"category": "Remote-SSH"
			},
			{
				"command": "opensshremotesexplorer.emptyWindowInNewWindow",
				"title": "Connect to Host in New Window",
				"icon": {
					"light": "resources/light/empty-window.svg",
					"dark": "resources/dark/empty-window.svg",
					"highContrast": "resources/highContrast/empty-window.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.emptyWindowInCurrentWindow",
				"title": "Connect to Host in Current Window"
			},
			{
				"command": "opensshremotesexplorer.startManagedHost",
				"title": "Start VM",
				"icon": {
					"light": "resources/light/vm-start.svg",
					"dark": "resources/dark/vm-start.svg",
					"highContrast": "resources/highContrast/vm-start.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.stopManagedHost",
				"title": "Stop VM",
				"icon": {
					"light": "resources/light/vm-stop.svg",
					"dark": "resources/dark/vm-stop.svg",
					"highContrast": "resources/highContrast/vm-stop.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.reopenFolderInCurrentWindow",
				"title": "Open on SSH Host in Current Window"
			},
			{
				"command": "opensshremotesexplorer.reopenFolderInNewWindow",
				"title": "Open on SSH Host in New Window",
				"icon": {
					"light": "resources/light/reopen-folder.svg",
					"dark": "resources/dark/reopen-folder.svg",
					"highContrast": "resources/highContrast/reopen-folder.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.deleteFolderHistoryItem",
				"title": "Remove From Recent List",
				"icon": {
					"light": "resources/light/remove.svg",
					"dark": "resources/dark/remove.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.configure",
				"title": "Configure",
				"icon": {
					"light": "resources/light/configure.svg",
					"dark": "resources/dark/configure.svg"
				}
			},
			{
				"command": "opensshremotesexplorer.add",
				"title": "Add New",
				"icon": {
					"light": "resources/light/plus.svg",
					"dark": "resources/dark/plus.svg"
				}
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "vscode-remote",
				"authority": "ssh-remote+*",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"tildify": true,
					"workspaceSuffix": "SSH"
				}
			}
		],
		"menus": {
			"statusBar/windowIndicator": [
				{
					"command": "opensshremotes.openEmptyWindow",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "1_remote_ssh_general@1"
				},
				{
					"command": "opensshremotes.openEmptyWindowInCurrentWindow",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "1_remote_ssh_general@1"
				},
				{
					"command": "opensshremotes.openConfigFile",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "1_remote_ssh_general@2"
				},
				{
					"command": "opensshremotes.showLog",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "1_remote_ssh_general@5"
				},
				{
					"command": "opensshremotes.settings",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "9_remote_ssh_help@1"
				},
				{
					"command": "opensshremotes.reportIssue",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "9_remote_ssh_help@2"
				},
				{
					"command": "opensshremotes.provideFeedback",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "9_remote_ssh_help@3"
				},
				{
					"command": "opensshremotes.getHelp",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected",
					"group": "9_remote_ssh_help@4"
				},
				{
					"command": "opensshremotes.openEmptyWindow",
					"when": "remoteConnectionState == disconnected",
					"group": "1_local_ssh@1"
				},
				{
					"command": "opensshremotes.openEmptyWindowInCurrentWindow",
					"when": "remoteConnectionState == disconnected",
					"group": "1_local_ssh@1"
				},
				{
					"command": "opensshremotes.openConfigFile",
					"when": "remoteConnectionState == disconnected",
					"group": "1_local_ssh@2"
				},
				{
					"command": "opensshremotes.getStarted",
					"when": "remoteConnectionState == disconnected",
					"group": "1_local_ssh@3"
				},
				{
					"command": "opensshremotes.openEmptyWindow",
					"when": "!remoteName",
					"group": "1_local_ssh@1"
				},
				{
					"command": "opensshremotes.openEmptyWindowInCurrentWindow",
					"when": "!remoteName",
					"group": "1_local_ssh@1"
				},
				{
					"command": "opensshremotes.openConfigFile",
					"when": "!remoteName",
					"group": "1_local_ssh@2"
				},
				{
					"command": "opensshremotes.getStarted",
					"when": "!remoteName",
					"group": "1_local_ssh@3"
				}
			],
			"commandPalette": [
				{
					"command": "opensshremotes.getStarted",
					"when": "false"
				},
				{
					"command": "opensshremotes.openEmptyWindowOnCurrentHost",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected"
				},
				{
					"command": "opensshremotes.provideFeedback",
					"when": "remoteName =~ /^ssh-remote$/"
				},
				{
					"command": "opensshremotes.cleanLocalServer",
					"when": "config.remote.SSH.useLocalServer"
				},
				{
					"command": "opensshremotesexplorer.emptyWindowInCurrentWindow",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.emptyWindowInNewWindow",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.startManagedHost",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.stopManagedHost",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.refresh",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.configure",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.add",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.reopenFolderInCurrentWindow",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.reopenFolderInNewWindow",
					"when": "false"
				},
				{
					"command": "opensshremotesexplorer.deleteFolderHistoryItem",
					"when": "false"
				},
				{
					"command": "opensshremotes.openWebUI",
					"when": "remoteName =~ /^ssh-remote$/ && remoteConnectionState == connected && config.remote.SSH.enableWebAccess"
				}
			],
			"view/title": [
				{
					"command": "opensshremotesexplorer.add",
					"when": "view == sshHosts",
					"group": "navigation"
				},
				{
					"command": "opensshremotesexplorer.configure",
					"when": "view == sshHosts",
					"group": "navigation"
				},
				{
					"command": "opensshremotesexplorer.refresh",
					"when": "view == sshHosts",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "opensshremotesexplorer.emptyWindowInNewWindow",
					"when": "viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/",
					"group": "inline@1"
				},
				{
					"command": "opensshremotesexplorer.emptyWindowInNewWindow",
					"when": "viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/",
					"group": "navigation@2"
				},
				{
					"command": "opensshremotesexplorer.emptyWindowInCurrentWindow",
					"when": "viewItem =~ /^opensshremotesexplorer.host(.managed.running)?$/",
					"group": "navigation@1"
				},
				{
					"command": "opensshremotesexplorer.startManagedHost",
					"when": "viewItem == opensshremotesexplorer.host.managed.deallocated",
					"group": "navigation@1"
				},
				{
					"command": "opensshremotesexplorer.startManagedHost",
					"when": "viewItem == opensshremotesexplorer.host.managed.deallocated",
					"group": "inline@1"
				},
				{
					"command": "opensshremotesexplorer.stopManagedHost",
					"when": "viewItem == opensshremotesexplorer.host.managed.running",
					"group": "navigation@3"
				},
				{
					"command": "opensshremotesexplorer.reopenFolderInNewWindow",
					"when": "viewItem == opensshremotesexplorer.folder.reachable",
					"group": "inline@1"
				},
				{
					"command": "opensshremotesexplorer.reopenFolderInNewWindow",
					"when": "viewItem == opensshremotesexplorer.folder.reachable",
					"group": "navigation@2"
				},
				{
					"command": "opensshremotesexplorer.reopenFolderInCurrentWindow",
					"when": "viewItem == opensshremotesexplorer.folder.reachable",
					"group": "navigation@1"
				},
				{
					"command": "opensshremotesexplorer.deleteFolderHistoryItem",
					"when": "viewItem =~ /^opensshremotesexplorer.folder/",
					"group": "navigation@3"
				},
				{
					"command": "opensshremotesexplorer.deleteFolderHistoryItem",
					"when": "viewItem =~ /^opensshremotesexplorer.folder/",
					"group": "inline@2"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "sshHosts",
				"when": "remote-ssh:noHosts",
				"contents": "No SSH hosts have been configured yet. Get started with SSH by visiting the [help view](command:~remote.helpPanel.focus)."
			}
		],
		"remoteHelp": {
			"getStarted": "https://aka.ms/vscode-remote/ssh/getting-started",
			"feedback": "https://aka.ms/vscode-remote/ssh/provide-feedback",
			"documentation": "https://aka.ms/vscode-remote/ssh",
			"issues": "https://aka.ms/vscode-remote/ssh/issues",
			"remoteName": "ssh-remote"
		}
	},
	"scripts": {
		"lint": "eslint 'src/**/*.ts'",
		"postinstall": "npm run downloadapi",
		"downloadapi": "npx vscode-dts master",
		"postdownloadapi": "npx vscode-dts dev",
		"vscode:prepublish": "webpack --mode production",
		"compile": "webpack --mode none",
		"watch": "webpack --mode none --watch",
		"package": "vsce package --yarn",
		"pretest": "tsc -p . --outDir out-test",
		"test": "node ./out-test/test/runTests.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/lockfile": "^1.0.1",
		"@types/minimist": "^1.2.1",
		"@types/mocha": "^8.0.4",
		"@types/node": "^14.14.7",
		"@types/shell-quote": "^1.7.0",
		"@types/sinon": "^9.0.8",
		"@types/webpack": "^4.41.25",
		"@typescript-eslint/eslint-plugin": "^4.8.2",
		"@typescript-eslint/parser": "^4.8.2",
		"azure-arm-resource": "^7.4.0",
		"azure-arm-website": "^5.7.0",
		"copy-webpack-plugin": "^6.3.0",
		"eslint": "^7.14.0",
		"eslint-plugin-import": "^2.22.1",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"sinon": "^9.2.1",
		"ts-loader": "^8.0.11",
		"typescript": "^4.0.5",
		"vsce": "^1.81.1",
		"vscode-nls-dev": "^3.3.2",
		"vscode-test": "^1.4.1",
		"webpack": "^4.44.2",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"azure-arm-compute": "^10.0.0",
		"azure-arm-network": "^13.0.0",
		"lockfile": "^1.0.4",
		"minimist": "^1.2.5",
		"posix-getopt": "^1.2.0",
		"shell-quote": "^1.7.2",
		"socks": "^2.5.0",
		"ssh-config": "^4.0.4",
		"vscode-extension-telemetry": "^0.1.6"
	},
	"__metadata": {
		"id": "607fd052-be03-4363-b657-2bd62b83d28a",
		"publisherId": "ac9410a2-0d75-40ec-90de-b59bb705801d",
		"publisherDisplayName": "Microsoft"
	}
}