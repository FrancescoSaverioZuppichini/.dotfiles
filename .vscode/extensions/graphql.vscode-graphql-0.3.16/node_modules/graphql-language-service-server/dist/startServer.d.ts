import { GraphQLConfig, GraphQLExtensionDeclaration } from 'graphql-config';
import { parseDocument } from './parseDocument';
import { LoadConfigOptions } from './types';
export interface ServerOptions {
    port?: number;
    hostname?: string;
    method?: 'socket' | 'stream' | 'node';
    loadConfigOptions?: LoadConfigOptions;
    configDir?: string;
    extensions?: GraphQLExtensionDeclaration[];
    fileExtensions?: string[];
    graphqlFileExtensions?: string[];
    config?: GraphQLConfig;
    parser?: typeof parseDocument;
    tmpDir?: string;
}
export declare type MappedServerOptions = Omit<ServerOptions, 'loadConfigOptions'> & {
    loadConfigOptions: Omit<LoadConfigOptions, 'rootDir'> & {
        rootDir: string;
    };
};
export default function startServer(options: ServerOptions): Promise<void>;
//# sourceMappingURL=startServer.d.ts.map